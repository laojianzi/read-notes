'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':3,'href':'/read-notes/posts/mdavatar-released-v1.0.0/','title':"MDAvatar 头像生成器 v1.0.0 [支持中文]",'section':"Blog",'content':"MDAvatar #  MDAvatar 可以根据字符串生成单字符头像，并且可以高度自定义，支持生成中文头像\n高度自定义\n Require go version \u0026gt;= 1.13 Require go mod enable  $ go get -u github.com/laojianzi/mdavatar 大写首字母 #  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;image/png\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/laojianzi/mdavatar\u0026#34; ) func main() { avatar, err := mdavatar.New(\u0026#34;laojianzi\u0026#34;).Build() if err != nil { log.Fatal(err) } filename := fmt.Sprintf(\u0026#34;out-%d.png\u0026#34;, time.Now().Unix()) file, err := os.Create(filename) if err != nil { log.Fatal(err) } if err := png.Encode(file, avatar); err != nil { log.Fatal(err) } } 中文转大写首字母 #  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;image/png\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/laojianzi/mdavatar\u0026#34; ) func main() { avatar, err := mdavatar.New(\u0026#34;老健仔\u0026#34;).Build() if err != nil { log.Fatal(err) } filename := fmt.Sprintf(\u0026#34;out-%d.png\u0026#34;, time.Now().Unix()) file, err := os.Create(filename) if err != nil { log.Fatal(err) } if err := png.Encode(file, avatar); err != nil { log.Fatal(err) } } 第一个中文 #  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;image/png\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/laojianzi/mdavatar\u0026#34; ) func main() { avatar, err := mdavatar.New(\u0026#34;老健仔\u0026#34;, mdavatar.WithAsianFont(\u0026#34;static/NotoSansSC-Regular.otf\u0026#34;)).Build() if err != nil { log.Fatal(err) } filename := fmt.Sprintf(\u0026#34;out-%d.png\u0026#34;, time.Now().Unix()) file, err := os.Create(filename) if err != nil { log.Fatal(err) } if err := png.Encode(file, avatar); err != nil { log.Fatal(err) } } 待补充 #   支持 cli (生成 png/jpg) 支持自定义形状 (圆形、椭圆形、方形 \u0026hellip;) 支持多种返回形式 (HTTP、Base64、WriteToFile \u0026hellip;)  项目地址 #  欢迎大家使用 MDAvatar\n如果喜欢帮忙 Srat 和 Fork，如果有疑问可以提 Issue 或者 Email\nGithub: https://github.com/laojianzi/mdavatar\n"});index.add({'id':4,'href':'/read-notes/docs/basic/how-computers-work/1/1/','title':"1.1 - 计算机的三个根本性基础",'section':"第 1 章 - 计算机的三大原则",'content':"1.1 - 计算机的三个根本性基础 #  "});index.add({'id':6,'href':'/read-notes/docs/advanced/csapp/','title':"CSAPP (TODO)",'section':"进阶阶段",'content':"CSAPP (TODO) #  "});index.add({'id':8,'href':'/read-notes/docs/basic/how-computers-work/1/','title':"第 1 章 - 计算机的三大原则",'section':"计算机是怎么连接的",'content':"第 1 章 - 计算机的三大原则 #  "});index.add({'id':9,'href':'/read-notes/docs/basic/how-computers-work/','title':"计算机是怎么连接的",'section':"基础阶段",'content':"计算机是怎么连接的 #  阅读目的是了解有关计算机技术的知识范围，掌握其中的基础知识，能够了解计算机的本质。\n目录 #  每个章节的标题以及当前的总结进度\n 计算机的三大原则 (待完成)  计算机的三个根本性基础 (待完成)    "});})();